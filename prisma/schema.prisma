// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  stocks        Stocks[]
  mailOptions   MailDetails?
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                 Int     @id @default(autoincrement())
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  @@unique([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique
  expires      DateTime
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
}

model VerificationToken {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime
  @@unique([identifier, token])
}


model Stocks{
  id           Int       @id @default(autoincrement())
  owner        User      @relation(fields: [userId], references: [id])
  userId       Int
  messariId    String
  name         String
  price        Float      
  shares       Float      
  currentPrice  Float?
}

model MailDetails{
  id           Int       @id @default(autoincrement())
  user         User     @relation(fields: [userId], references: [id])
  userId       Int       @unique
  beginDate    DateTime
  frequency    String
}